/*!
 * Card Check
 * 
 * A credit card validator and type guesser 
 * 
 * This plugin allows you to easily get the credit card type of 
 * whatever number is being entered. It is highly configurable 
 * to allow you to add additional credit card types as needed 
 * without ever having to adjust the internal code.
 *  
 * For documentation, look in the package you downloaded or go to
 * http://eclarian.com/cardcheck/
 * 
 * NOTE: This is not open source software and you must purchase
 * a license to legally use.
 * 
 * @uses       jQuery
 * @author     Eclarian Dev Team <eclarian@eclarian.com>
 * @copyright  Eclarian LLC
 * @date       November 29, 2011
 * @version    1.0.0
 */
(function(d){d.cardcheck=function(b,h){if("object"===typeof b&&"input"in b)h=b,b=h.input;var l={onReset:function(){},onError:function(){},onValidation:function(){},onTypeUpdate:function(){},input:!1,allowSpaces:!0,acceptedCards:"visa,mastercard,amex,diners,discover,jcb".split(","),enableIcons:!0,iconLocation:"",iconDir:"images/",iconExt:"png",iconClass:"card-icons",niceNames:{visa:"Visa",mastercard:"Mastercard",amex:"American Express",discover:"Discover",diners:"Diners Club",jcb:"JCB"},regExpNumCheck:"^[0-9]+$",
regExpApprox:{visa:"^4",mastercard:"^5[1-5]",amex:"^(34|37)",discover:"^6011",diners:"^(30|36|38|39)",jcb:"^35"},startNum:{visa:["4"],mastercard:["5"],amex:["3"],discover:["6"],diners:["3"],jcb:["3","2","1"]},cardLength:{visa:[13,16],mastercard:[16],amex:[15],discover:[16],diners:[14],jcb:[15,16]}},f=+new Date,a=this,i=!1,j=!1,g=d(b);a.settings={};a.lastType="";var n=function(c){!0===a.settings.allowSpaces&&(c=c.replace(/\s/g,""));if(1>c.length)return!1;if(!c.match(RegExp(a.settings.regExpNumCheck)))return j=
!0,a.settings.onError("NaN"),!1;!0===j&&(j=!1,a.settings.onReset());var k=!1;d.each(a.settings.acceptedCards,function(p,e){if(1===c.length&&e in a.settings.startNum){if("3"===c)return!0;if(-1!==d.inArray(c,a.settings.startNum[e]))return k=e,!1}var b,f=!1,g=!1,h=!1;e in a.settings.cardLength&&-1!==d.inArray(c.length,a.settings.cardLength[e])?f=!0:c.length>=Math.max.apply(Math,a.settings.cardLength[e])?(g=f=!0,h=c.length>Math.max.apply(Math,a.settings.cardLength[e])):!0===i&&(i=!1,a.settings.onReset());
if(e in a.settings.regExpApprox&&(b=RegExp(a.settings.regExpApprox[e]),c.match(b))){k=e;if(!1===f)return!1;if(!0===m(c)&&!h)i=!0,a.settings.onValidation(e,a.settings.niceNames[e]);else if(g)i=!1,a.settings.onError(e);else if(c.length<Math.min.apply(Math,a.settings.cardLength[e]))a.settings.onReset();return!1}});return k},m=function(a){var d=[[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]],b=0;a.replace(/\D+/g,"").replace(/[\d]/g,function(a,c,f){b+=d[f.length-c&1][parseInt(a,10)]});return 0===b%10&&0<
b},o=function(){if(!1===a.settings.enableIcons)return!1;var c=a.settings.iconLocation?d(a.settings.iconLocation):g.parent();d.each(a.settings.acceptedCards,function(b,g){c.append(d("<img>").attr("id","card-"+g+f).attr("src",a.settings.iconDir+g+"."+a.settings.iconExt).addClass(a.settings.iconClass+f))})};(function(){a.settings=d.extend({},l,h);o();g.bind("keyup.cardcheck change.cardcheck",function(){var c=g.val(),b=n(c);a.lastType!==b&&!1!==b&&(d("."+a.settings.iconClass+f).not("#card-"+b+f).fadeTo("fast",
0.2),d("#card-"+b+f).css("opacity",1),a.settings.onReset(),a.settings.onTypeUpdate(b,a.settings.niceNames[b]));if(!c)a.lastType="",d("."+a.settings.iconClass+f).css("opacity",1),a.settings.onTypeUpdate(b,"");a.lastType=b})})();return g};d.fn.cardcheck=function(b){return this.each(function(){if(void 0==d(this).data("cardcheck"))return d.cardcheck(this,b).data("cardcheck","true")})}})(jQuery);